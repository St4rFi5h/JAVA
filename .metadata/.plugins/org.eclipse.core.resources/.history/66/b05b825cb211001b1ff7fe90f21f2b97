package com.minigame;
import java.util.Arrays;
import java.util.Scanner;

public class BaseBall extends GameMenu {
	
	public BaseBall() {
		
	}
	
	public void SeUser() {
		
		for(int i=0;i<usr.size() ;i++) {
			System.out.println("유저이름: "+usr.get(i).name +"코인갯수: "+usr.get(i).coin);
		}
		
		
	}
	
	
	
	public void BaseballStart ()
	{
		int [] arr_correct_answer = new int[4];
		int [] arr_your_answer = new int[4];
		int correct_answer = 0;
		int your_answer = 0;
		int change_to_arr = 0; // 숫자를 수열로 바꿔주는 함수.
		boolean overlap = false; // 숫자 자릿수가 중복값이 있는지 확인하는 함수

		int hit = 0;
		int ball = 0;
		int strike = 0; 
		int temp_strike = 0;
		int out = 0;

		Scanner sc = new Scanner(System.in);

		//무한반복 돌릴땐 주로 while true 문 이용.
		while(true) //  야구 게임을 돌리기 위한 무한 루프 
		{
			System.out.println("=======================");
			System.out.println("1. 야구게임 시작");
			System.out.println("2. 그만하기");
			System.out.println("=======================");

			int choose = sc.nextInt(); //1,2 번중 선택

			if(choose == 1) //게임시작 
			{            

				while(true)  //출제자의 번호를 받아서 기억하는 무한루프
				{
					System.out.println("출제자는 1-9까지 임의의 번호 4개를 입력해주세요.(ex.1234)");

					correct_answer = sc.nextInt();
					change_to_arr = 1000; // 출제를 다시하게 될 경우 초기화
					int handle_num = correct_answer;
					overlap = false;

					for(int i= 0; i<4; i++) //handle_num 에서 받은 숫자를 arr_correct_answer에 각각 할당하는 for문
					{
						arr_correct_answer[i] = handle_num/change_to_arr; // '/'를 통해 어레이에 각각할당.
						handle_num %=change_to_arr;  // %로 자릿수를 한칸씩 낮춤
						change_to_arr/=10; // change_to_arr의 값을 맞춰줌
					}
					for(int i= 0; i<4 ; i++)// 수열에서 중복값이 있는지를 확인한다.
						for(int j = 0; j<i; j++)
						{
							if(arr_correct_answer[j] == arr_correct_answer[i]) 
							{
								overlap = true; //중복값이 있을 때 처리방법 
							}
						}

					if(correct_answer <1000 || correct_answer>9999) //유효하지 않은 숫자를 넣었을 경우
					{
						System.out.println("유효하지 않은 번호를 입력하셨습니다.");
						System.out.println("다시 입력해주세요.");                  
					}
					else if (overlap == true) // 각 자리숫자중 중복값이 있는 경우.
					{
						System.out.println("번호를 잘못입력하셨습니다.");
						System.out.println("숫자의 중복값이 없게 다시 입력해주세요.");      
					}else
					{
						change_to_arr = 1000; // 맞추는 사람의 번호를 수열로 바꾸기 위해 초기화
						break;
					}
				}   

				for(int i = 0; i<20; i++) //게임시작을 알림
				{
					System.out.println("!!!!! Play ball !!!!!");
				}

				for(;;) //문제를 푸는 무한루프
				{
					System.out.print("\n" + "번호를 맞춰주세요. :");
					your_answer = sc.nextInt();
					change_to_arr = 1000; // 다시 맞추게 될 경우 초기화
					if(your_answer<1000 || your_answer>9999) // 유효하지 않은 숫자를 넣었을 경우.
					{
						System.out.println("유효하지 않은 번호를 입력하셨습니다.");
						System.out.println("다시 입력해주세요.");      
					}else
					{
						int handle_num = your_answer;
						hit = 0;
						ball = 0; //히트와 볼 초기화

						for(int i = 0; i<4; i++) //번호를 수열에 입력.
						{
							arr_your_answer[i] = handle_num/change_to_arr;
							handle_num %=change_to_arr;
							change_to_arr/=10;
						}

						for(int i =0; i<4; i++)
						{
							for(int j=0; j<4; j++)//순차적으로 돌면서 userInput 과 정답이 같은 숫자가 나오면 if문 실행
							{      
								if(arr_your_answer[j]==arr_correct_answer[i]) 
								{
									if(i==j) //if 가 실행되었고 i==j 값이 같으면 히트로 출력
									{
										hit++;
									} else if(i!=j)//같은값이 있으나 서로 인덱스 값이 다를경우 ball 로 출력
									{
										ball++;
									}
								}      

							}                        
							//temp 값에  요소값이 존재할경우 그 index 를 반환 없으면 음수를 반환하는 Arrays 객체
							int temp = Arrays.binarySearch(arr_correct_answer,arr_your_answer[i]);                        
							if(temp<0) //
							{
								strike++;
								temp_strike++;
							}
							if(hit == 4)//홈런일시 경기종료 (반복문 탈출)
							{
								System.out.println("!!!!!!!Home Run!!!!!!!");
								sc.close();
								System.exit(0);
							}
						}                  
					}
					System.out.println("현재==>>  히트:" + hit +" 볼:"+ ball+ " 스트라이크:" + temp_strike + "\n" + "         누적된 스트라이크:"+ strike + "\n");
					temp_strike =0;

					if(strike >= 3) //스트라이크가 3개가 되면 아웃 카운트 한 개가 올라가고, 아웃이 세 개가 될 때까지 홈런을 못치면 게임 패배
					{
						out++;
						if(out == 3) //아웃이 3개가 되어 패배하는 경우
						{
							System.out.print(out + "회 아웃으로 게임에 패배하셨습니다.");
							sc.close();
							System.exit(0);
						}
						strike-=3;
						System.out.println("스트라이크 3회가 누적되어 아웃됩니다. 3아웃시 게임종료."+"\n");
						System.out.println("현재==>>  히트:" + hit +" 볼:"+ ball+ "스트라이크" + temp_strike + "\n" + "         누적된 스트라이크:"+ strike +" 아웃:" + out+"\n");	
					}
				}

			} else if (choose == 2)   {
				System.out.println("게임을 종료합니다.");
				System.exit(0);
			} else // 다른 값이 들어갈경우 오류
				System.out.println("유효하지 않은 값입니다. 다시 입력해주세요.");
		}
	}
}
